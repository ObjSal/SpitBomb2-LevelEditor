'use strict';function _defineProperty(a,b,c){if(b in a){Object.defineProperty(a,b,{value:c,enumerable:true,configurable:true,writable:true})}else{a[b]=c}return a}import{Player}from"./player.js";import{Block}from"./block.js";const speed=10;export class Bomb{constructor(a,b,c,d){this.x=a;this.y=b;this.dir=this.getDirection(c);this.map=d;this.image=new Image;this.image.src="images/bomb.png"}getDirection(a){switch(a){case Player.Direction.South:{return{x:0,y:speed}}case Player.Direction.SouthWest:{return{x:-speed,y:speed}}case Player.Direction.SouthEast:{return{x:speed,y:speed}}case Player.Direction.West:{return{x:-speed,y:0}}case Player.Direction.East:{return{x:speed,y:0}}case Player.Direction.North:{return{x:0,y:-speed}}case Player.Direction.NorthWest:{return{x:-speed,y:-speed}}case Player.Direction.NorthEast:{return{x:speed,y:-speed}}default:{return this.getDirection(Player.Direction.South)}}}move(a,b){this.x=a;this.y=b}update(a){this.x+=this.dir.x*a;this.y+=this.dir.y*a;if(this.x<=0||this.x+Bomb.size>=this.map.width||this.y<=0||this.y+Bomb.size>=this.map.height){return true}for(let b=0;b<this.map.blocks.length;b++){let a=this.map.blocks[b];if(a.hitTest(this.x+1,this.y+1,Bomb.size-2,Bomb.size-2)){if(a.type===Block.Type.Soft){this.map.blocks.splice(b,1)}return true}}return false}draw(a){let b=this.x,c=this.y,d=Bomb.size,e=Bomb.size;if(this.image.width>this.image.height){let a=Bomb.size/this.image.width;d=Bomb.size;e=this.image.height*a;b=this.x;c=this.y+(Bomb.size-e)/2}else if(this.image.width<this.image.height){let a=Bomb.size/this.image.height;e=Bomb.size;d=this.image.width*a;b=this.x+(Bomb.size-d)/2;c=this.y}a.drawImage(this.image,b,c,d,e)}}_defineProperty(Bomb,"size",25);